# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
     # Docker Hub image that `container-job` executes in
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
   # container: node:10.18-jessie 
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.3.0
      with:
      # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
        java-version: 11        
    - name: Run SQL scripts
      run: PGPASSWORD=postgres psql -h 127.0.0.53 -U postgres -W postgres  -f src/main/resources/datamodel/create_database.sql -f src/main/resources/datamodel/dcsa_tnt_v1.sql -f src/main/resources/datamodel/dcsa_v2.sql -f src/main/resources/datamodel/test_data.sql
    
    - name: Build backend
      run: mvn -B package --file pom.xml
    - name: Run backend
      run: java -jar target/dcsa_backend*.war &

    - name: Checkout dcsaorg/DCSA-API-Validator 
      uses: actions/checkout@v2.3.1
      with:
        repository: dcsaorg/DCSA-API-Validator
        ref: master
        token: ${{ secrets.read_repo_pat }}
    - name: Run testsuite
      run: mvn -B package --file pom.xml
