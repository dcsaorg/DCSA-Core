# GitHub Actions configuration
name: Microservices CI

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest
     # Docker Hub image that `container-job` executes in
    #services:
      ## Label used to access the service container
      #postgres:
        ## Docker Hub image
        #image: postgres
        ## Provide the password for postgres
        #env:
          #POSTGRES_PASSWORD: postgres
        ## Set health checks to wait until postgres has started
        #options: >-
          #--health-cmd pg_isready
          #--health-interval 10s
          #--health-timeout 5s
          #--health-retries 5
        #ports:
          ## Maps tcp port 5432 on service container to the host
          #- 5432:5432
    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v1.3.0
      with:
      # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
        java-version: 11

    - name: Build backend
      run: mvn package --file pom.xml -DskipTests
    - name: Build and run the microservices
      env:
        POSTGRES_PASSWORD: just_any_password
      run: docker-compose -f docker-compose/docker-compose.yaml up -d -V
    - name: Check running containers
      run: docker ps -a
    - name: Check logs
      run: docker logs dcsa_db
    - name: Checkout dcsaorg/DCSA-API-Validator
      uses: actions/checkout@v2.3.1
      with:
        repository: dcsaorg/DCSA-API-Validator
        ref: master
        token: ${{ secrets.read_repo_pat }}

    - name: Run testsuite
      run: mvn test --file pom.xml
